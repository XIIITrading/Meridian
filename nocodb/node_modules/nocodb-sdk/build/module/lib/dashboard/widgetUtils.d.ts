import { ChartTypes, WidgetDataSourceTypes, WidgetType, WidgetTypes } from '.';
import { ColumnType } from '../../lib';
export declare const calculateNextPosition: (existingWidgets: WidgetType[], newWidgetDimensions: {
    w: number;
    h: number;
}, gridColumns?: number) => {
    x: number;
    y: number;
};
declare const getDefaultConfig: (widgetType: WidgetTypes, chartType?: ChartTypes, columns?: Array<ColumnType>) => {
    chartType: ChartTypes;
    data: {
        category: {
            column_id: string;
            orderBy: "default";
            includeEmptyRecords: boolean;
        };
        value: {
            type: "count";
        };
    };
    appearance: {
        size: "medium";
        showCountInLegend: boolean;
        showPercentageOnChart: boolean;
        legendPosition: "right";
        colorSchema: "default";
        customColorSchema: any[];
    };
    permissions: {
        allowUserToPrint: boolean;
        allowUsersToViewRecords: boolean;
    };
    dataSource: WidgetDataSourceTypes;
} | {
    chartType: ChartTypes.BAR | ChartTypes.LINE | ChartTypes.SCATTER;
    dataSource: WidgetDataSourceTypes;
} | {
    dataSource: WidgetDataSourceTypes;
    metric: {
        type: "count";
        aggregation: "count";
    };
    appearance: {
        type: "filled";
        theme: "purple";
    };
} | {
    dataSource?: undefined;
    metric?: undefined;
    appearance?: undefined;
};
export { getDefaultConfig };
