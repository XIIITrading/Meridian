import{e as x,R as b,T as k,r as d,aQ as h,dD as w,I as m,o as i,w as p,c as C,an as g,aq as L,L as f,eO as V,d as M,t as S,P as B,ez as y}from"./DOFFjK0_.js";const I=x({__name:"ChannelMultiSelect",props:{modelValue:{},availableChannelList:{},placeholder:{}},emits:["update:modelValue"],setup(c,{emit:v}){const u=b(c,["availableChannelList","placeholder"]),_=k(u,"modelValue",v),o=d([]),s=d([]);function r(a){if(a.length){let l=0;s.value=a.map(n=>({...n,idx:l++}));for(const n of u.modelValue||[]){const t=s.value.find(e=>e.webhook_url===n.webhook_url&&e.channel===n.channel);t&&o.value.push(t.idx)}}}return h(()=>c.availableChannelList,(a,l)=>{a!==l&&r(a)}),h(()=>o.value,a=>{const l=[];for(const n of a){const t=s.value.find(e=>e.idx===n);t&&l.push({webhook_url:t.webhook_url,channel:t.channel})}_.value=l}),w(()=>r(c.availableChannelList)),(a,l)=>{const n=V,t=y;return i(),m(t,{value:f(o),"onUpdate:value":l[0]||(l[0]=e=>B(o)?o.value=e:null),mode:"multiple",placeholder:a.placeholder,"max-tag-count":"responsive","dropdown-class-name":"nc-dropdown-webhook-channel"},{default:p(()=>[(i(!0),C(g,null,L(f(s),e=>(i(),m(n,{key:e.idx,value:e.idx},{default:p(()=>[M(S(e.channel),1)]),_:2},1032,["value"]))),128))]),_:1},8,["value","placeholder"])}}}),R=Object.assign(I,{__name:"WebhookChannelMultiSelect"});export{R as default};
